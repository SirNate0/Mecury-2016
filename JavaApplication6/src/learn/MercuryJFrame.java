/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package learn;

import java.awt.Color;
import static java.lang.Double.parseDouble;
import static java.lang.Math.random;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import learn.LineReader;

/**
 *
 * @author Tyler
 */
public class MercuryJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MercuryJFrame
     */
    
    String connectionStatusContents = null;
    double temperatureStatusContents = 0;
    double backDistanceContents = 0;
    double rightDistanceContents = 0;
    double leftDistanceContents = 0;
    double leftRawFrontContents = 0;
    double leftRawBackContents = 0;
    double rightRawFrontContents = 0;
    double rightRawBackContents = 0;
    final double DISTANCE_SENSOR_THRESHOLD_HIGH = 900; //get a value
    final double DISTANCE_SENSOR_THRESHOLD_LOW = -100;
    
    Random rand = new Random();
    Timer t = new Timer();
    
    public MercuryJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabelConnection = new javax.swing.JLabel();
        jLabelConnectionStatus = new javax.swing.JLabel();
        jButtonUpdate = new javax.swing.JButton();
        jLabelConnectionTemp = new javax.swing.JLabel();
        jLabelTemperatureStatus = new javax.swing.JLabel();
        jLabelLeft = new javax.swing.JLabel();
        jLabelLeftDistance = new javax.swing.JLabel();
        jLabelRight = new javax.swing.JLabel();
        jLabelRightDistance = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();
        jLabelBackDistance = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelRightRawFront = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelLeftRawFront = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelRightRawBack = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelLeftRawBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitle.setText("OU Mercury");

        jLabelConnection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelConnection.setText("Connection Status:");

        jLabelConnectionStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelConnectionStatus.setForeground(new java.awt.Color(150, 150, 0));
        jLabelConnectionStatus.setText("Connected");

        jButtonUpdate.setText("Begin Displaying Values.");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jLabelConnectionTemp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelConnectionTemp.setText("Battery Temperature (Celsius):");

        jLabelTemperatureStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTemperatureStatus.setForeground(new java.awt.Color(150, 150, 0));
        jLabelTemperatureStatus.setText("####");

        jLabelLeft.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLeft.setText("Left (units)");

        jLabelLeftDistance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLeftDistance.setForeground(new java.awt.Color(150, 150, 0));
        jLabelLeftDistance.setText("####");

        jLabelRight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRight.setText("Right (Units)");

        jLabelRightDistance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelRightDistance.setForeground(new java.awt.Color(150, 150, 0));
        jLabelRightDistance.setText("####");

        jLabelBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBack.setText("Back (Units)");

        jLabelBackDistance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelBackDistance.setForeground(new java.awt.Color(150, 150, 0));
        jLabelBackDistance.setText("####");

        jLabel1.setText("Raw Side Values (Units)");

        jLabelRightRawFront.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRightRawFront.setForeground(new java.awt.Color(150, 150, 0));
        jLabelRightRawFront.setText("####");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Right Front");

        jLabelLeftRawFront.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLeftRawFront.setForeground(new java.awt.Color(150, 150, 0));
        jLabelLeftRawFront.setText("####");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Left Front");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Right Back");

        jLabelRightRawBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRightRawBack.setForeground(new java.awt.Color(150, 150, 0));
        jLabelRightRawBack.setText("####");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Left Back");

        jLabelLeftRawBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLeftRawBack.setForeground(new java.awt.Color(150, 150, 0));
        jLabelLeftRawBack.setText("####");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelConnection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelConnectionStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitle))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelConnectionTemp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTemperatureStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLeftDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLeft))
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRightDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRight)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabelBackDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLeftRawFront)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLeftRawBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabelBack)))
                .addContainerGap(191, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRightRawFront)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRightRawBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabelConnection, jLabelConnectionTemp});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel5, jLabel6, jLabel8, jLabelLeftRawBack, jLabelLeftRawFront, jLabelRightRawBack, jLabelRightRawFront});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelConnectionStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelConnectionTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTemperatureStatus)))
                    .addComponent(jLabelTitle))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRight, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLeftDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRightDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelBackDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelLeftRawFront)
                    .addComponent(jLabel8)
                    .addComponent(jLabelLeftRawBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUpdate)
                    .addComponent(jLabel3)
                    .addComponent(jLabelRightRawFront)
                    .addComponent(jLabel6)
                    .addComponent(jLabelRightRawBack)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelConnection, jLabelConnectionStatus});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed

        jButtonUpdate.hide();
        
        t.scheduleAtFixedRate(
                new TimerTask()
                {
                    public void run()
                    {
                        UpdateGUIValues();
                    }
                },
                0,
                100);
    }
    
    private void UpdateGUIValues()
    {       
        
        connectionStatusContents = LineReader.getLine(1);
        if (connectionStatusContents == null)
        {
            jLabelConnectionStatus.setForeground(Color.yellow);
            jLabelConnectionStatus.setText("Reading...");
            return;
        }
            
        
        //updating ConnectionStatus        
        if(LineReader.getLine(1).equals("Connected"))
        {
            jLabelConnectionStatus.setForeground(new Color(0,150,0));
            jLabelConnectionStatus.setText("Connected");
        }
        else if(LineReader.getLine(1).equals("Disconnected"))
        {
            jLabelConnectionStatus.setForeground(Color.red);
            jLabelConnectionStatus.setText("Disconnected");
        }
        else
        {
            jLabelConnectionStatus.setText("ERROR: Unknown Value");
            jLabelConnectionStatus.setForeground(Color.red);
        }
        
        //updating TemperatureStatus
        temperatureStatusContents = parseDouble(LineReader.getLine(2));
        if(temperatureStatusContents <= 50)
        {
            jLabelTemperatureStatus.setForeground(new Color(0,150,0));
            jLabelTemperatureStatus.setText("" + temperatureStatusContents);
        }
        else if(temperatureStatusContents > 50)
        {
            jLabelTemperatureStatus.setForeground(Color.red);
            jLabelTemperatureStatus.setText("" + temperatureStatusContents);
        }
        else
        {
            jLabelTemperatureStatus.setText("ERROR: Unknown Value");
            jLabelTemperatureStatus.setForeground(Color.red);
        }
        
        //updating BackDistance
        backDistanceContents = parseDouble(LineReader.getLine(3));
        
        if(backDistanceContents >= 2)
        {
            jLabelBackDistance.setForeground(new Color(0,150,0));
            jLabelBackDistance.setText("" + backDistanceContents);
        }
        else if(backDistanceContents < 2)
        {
            jLabelBackDistance.setForeground(Color.red);
            jLabelBackDistance.setText("" + backDistanceContents);
        }
        else
        {
            jLabelBackDistance.setText("ERROR: Unknown Value");
            jLabelBackDistance.setForeground(Color.red);
        }
        
        //updating RightDistance
        rightDistanceContents = parseDouble(LineReader.getLine(4));
        
        if(rightDistanceContents >= 2)
        {
            jLabelRightDistance.setForeground(new Color(0,150,0));
            jLabelRightDistance.setText("" + rightDistanceContents);
        }
        else if(leftDistanceContents < 2)
        {
            jLabelRightDistance.setForeground(Color.red);
            jLabelRightDistance.setText("" + rightDistanceContents);
        }
        else
        {
            jLabelRightDistance.setText("ERROR: Unknown Value");
            jLabelRightDistance.setForeground(Color.red);
        }
        
        //updating LeftDistance
        leftDistanceContents = parseDouble(LineReader.getLine(5));
        
        if(leftDistanceContents >= 2)
        {
            jLabelLeftDistance.setForeground(new Color(0,150,0));
            jLabelLeftDistance.setText("" + leftDistanceContents);
        }
        else if(leftDistanceContents < 2)
        {
            jLabelLeftDistance.setForeground(Color.red);
            jLabelLeftDistance.setText("" + leftDistanceContents);
        }
        else
        {
            jLabelLeftDistance.setText("ERROR: Unknown Value");
            jLabelLeftDistance.setForeground(Color.red);
        }    
        
        //updating LeftRawFront
        leftRawFrontContents = parseDouble(LineReader.getLine(6));
        
        if(leftRawFrontContents >= 2)
        {
            jLabelLeftRawFront.setForeground(new Color(0,150,0));
            jLabelLeftRawFront.setText("" + leftRawFrontContents);
        }
        else if(leftRawFrontContents < 2)
        {
            jLabelLeftRawFront.setForeground(Color.red);
            jLabelLeftRawFront.setText("" + leftRawFrontContents);
        }
        else
        {
            jLabelLeftRawFront.setText("ERROR: Unknown Value");
            jLabelLeftRawFront.setForeground(Color.red);
        }  
        
        //updating LeftRawBack
        leftRawBackContents = parseDouble(LineReader.getLine(7));
        
        if(leftRawBackContents >= 2)
        {
            jLabelLeftRawBack.setForeground(new Color(0,150,0));
            jLabelLeftRawBack.setText("" + leftRawBackContents);
        }
        else if(leftRawBackContents < 2)
        {
            jLabelLeftRawBack.setForeground(Color.red);
            jLabelLeftRawBack.setText("" + leftRawBackContents);
        }
        else
        {
            jLabelLeftRawBack.setText("ERROR: Unknown Value");
            jLabelLeftRawBack.setForeground(Color.red);
        }  
        
        //updating RightRawFront
        rightRawFrontContents = parseDouble(LineReader.getLine(8));
        
        if(rightRawFrontContents >= 2)
        {
            jLabelRightRawFront.setForeground(new Color(0,150,0));
            jLabelRightRawFront.setText("" + rightRawFrontContents);
        }
        else if(rightRawFrontContents < 2)
        {
            jLabelRightRawFront.setForeground(Color.red);
            jLabelRightRawFront.setText("" + rightRawFrontContents);
        }
        else
        {
            jLabelRightRawFront.setText("ERROR: Unknown Value");
            jLabelRightRawFront.setForeground(Color.red);
        }  
        
        //updating RightRawBack
        rightRawBackContents = parseDouble(LineReader.getLine(9));
        
        if(rightRawBackContents >= 2)
        {
            jLabelRightRawBack.setForeground(new Color(0,150,0));
            jLabelRightRawBack.setText("" + rightRawBackContents);
        }
        else if(rightRawBackContents < 2)
        {
            jLabelRightRawBack.setForeground(Color.red);
            jLabelRightRawBack.setText("" + rightRawBackContents);
        }
        else
        {
            jLabelRightRawBack.setText("ERROR: Unknown Value");
            jLabelRightRawBack.setForeground(Color.red);
        }  
        
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MercuryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MercuryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MercuryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MercuryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MercuryJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JLabel jLabelBackDistance;
    private javax.swing.JLabel jLabelConnection;
    private javax.swing.JLabel jLabelConnectionStatus;
    private javax.swing.JLabel jLabelConnectionTemp;
    private javax.swing.JLabel jLabelLeft;
    private javax.swing.JLabel jLabelLeftDistance;
    private javax.swing.JLabel jLabelLeftRawBack;
    private javax.swing.JLabel jLabelLeftRawFront;
    private javax.swing.JLabel jLabelRight;
    private javax.swing.JLabel jLabelRightDistance;
    private javax.swing.JLabel jLabelRightRawBack;
    private javax.swing.JLabel jLabelRightRawFront;
    private javax.swing.JLabel jLabelTemperatureStatus;
    private javax.swing.JLabel jLabelTitle;
    // End of variables declaration//GEN-END:variables

    private Color Color(int i, int i0, int i1) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
